{"remainingRequest":"/Users/alfredmcporkchop/Documents/WorkSpace/Vue-Study/demo/node_modules/babel-loader/lib/index.js!/Users/alfredmcporkchop/Documents/WorkSpace/Vue-Study/demo/node_modules/ts-loader/index.js??ref--14-2!/Users/alfredmcporkchop/Documents/WorkSpace/Vue-Study/demo/node_modules/eslint-loader/index.js??ref--13-0!/Users/alfredmcporkchop/Documents/WorkSpace/Vue-Study/demo/src/utils/validation.rule.ts","dependencies":[{"path":"/Users/alfredmcporkchop/Documents/WorkSpace/Vue-Study/demo/src/utils/validation.rule.ts","mtime":1592018061531},{"path":"/Users/alfredmcporkchop/Documents/WorkSpace/Vue-Study/demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alfredmcporkchop/Documents/WorkSpace/Vue-Study/demo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/alfredmcporkchop/Documents/WorkSpace/Vue-Study/demo/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/alfredmcporkchop/Documents/WorkSpace/Vue-Study/demo/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlZ2V4ID0gewogIGVtYWlsOiAvXlthLXpBLVowLTlfLV0rQFthLXpBLVowLTlfLV0rKFwuW2EtekEtWjAtOV8tXSspKyQvZwp9Owp2YXIgcnVsZXMgPSB7CiAgZW1haWw6IGZ1bmN0aW9uIGVtYWlsKHJ1bGUsIHZhbHVlLCBjYWxsYmFjaykgewogICAgaWYgKCF2YWx1ZSkgY2FsbGJhY2soKTtlbHNlIGlmIChyZWdleC5lbWFpbC50ZXN0KHZhbHVlKSkgY2FsbGJhY2soKTtlbHNlIGNhbGxiYWNrKG5ldyBFcnJvcigi6K+36L6T5YWl5q2j56Gu55qE6YKu566x5Zyw5Z2AIikpOwogICAgcmV0dXJuOwogIH0KfTsKZXhwb3J0IGRlZmF1bHQgcnVsZXM7"},{"version":3,"sources":["/Users/alfredmcporkchop/Documents/WorkSpace/Vue-Study/demo/node_modules/eslint-loader/index.js??ref--13-0!/Users/alfredmcporkchop/Documents/WorkSpace/Vue-Study/demo/src/utils/validation.rule.ts"],"names":[],"mappings":"AAAA,IAAM,KAAK,GAAG;AACZ,EAAA,KAAK,EAAE;AADK,CAAd;AAGA,IAAM,KAAK,GAAG;AACZ,EAAA,KADY,iBACN,IADM,EACQ,KADR,EACuB,QADvB,EACuD;AACjE,QAAI,CAAC,KAAL,EAAY,QAAQ,GAApB,KACK,IAAI,KAAK,CAAC,KAAN,CAAY,IAAZ,CAAiB,KAAjB,CAAJ,EAA6B,QAAQ,GAArC,KACA,QAAQ,CAAC,IAAI,KAAJ,CAAU,YAAV,CAAD,CAAR;AACL;AACD;AANW,CAAd;AAQA,eAAe,KAAf","sourcesContent":["const regex = {\n  email: /^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/g\n};\nconst rules = {\n  email(rule: object, value: string, callback: (arg0?: Error) => void) {\n    if (!value) callback();\n    else if (regex.email.test(value)) callback();\n    else callback(new Error(\"请输入正确的邮箱地址\"));\n    return;\n  }\n};\nexport default rules;\n"],"sourceRoot":""}]}